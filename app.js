function isNumber(arg) {
   return !isNaN(parseFloat(arg)) && isFinite(arg) && arg != " ";
}

function getRandomInt(max) {
   return Math.floor(Math.random() * max);
}

function game() {
let counter = 10;
   function istNummerGame(prm) {
      //console.log(prm);
      ask = prompt("–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100");
      if (ask === null) {
         alert("–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞");
         counter--;
      } else if (counter == 0) {
         if (confirm("–ü–æ–ø—ã—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ?")) {
            game();
         } else {
            alert("–¢–æ–≥–¥–∞ –≤—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ!üññüèª")
         }
      } else if (!isNumber(ask)) {
         alert("–í–≤–µ–¥–∏ —á–∏—Å–ª–æ!");
         counter--;
         istNummerGame(getRandomInt(100));
      } else if (ask <= 0) {
         alert("–í–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100 üòä ");
         game();
      } else if (ask < prm) {
         alert("–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ");
         alert(`–ü—Ä–æ–±—É–π –¥–∞–ª—å—à–µ –µ—â—ë ‚ùóÔ∏è${counter}‚ùóÔ∏è –ø–æ–ø—ã—Ç–æ–∫!`);
         counter--;
         istNummerGame(getRandomInt(100));
      } else if (ask > prm) {
         alert("–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ");
         alert(`–ü—Ä–æ–±—É–π –¥–∞–ª—å—à–µ –µ—â—ë ‚ùóÔ∏è${counter}‚ùóÔ∏è  –ø–æ–ø—ã—Ç–æ–∫!`);
         counter--;
         istNummerGame(getRandomInt(100));
      } else if (ask == prm) {
         alert("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é,–í—ã —É–≥–∞–¥–∞–ª–∏!!!üèÜ");
         if (confirm("–•–æ—Ç–µ–ª–∏ –±—ã —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ?")) {
            game();
         } else {
            alert("–¢–æ–≥–¥–∞ –≤—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ!üññüèª")
         }
      }
   }
   istNummerGame(getRandomInt(100));
}
game();
//+++++++++++++++++++++++++++++++++++++++++++++++++++